{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/auth.interceptor.ts","./src/app/_services/auth.service.ts","./src/app/_services/token-storage.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.service.ts","./src/app/board-user/board-user.component.ts","./src/app/board-user/board-user.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/rows/rows.component.ts","./src/app/rows/rows.component.html","./src/app/utils/validation.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { Observable } from 'rxjs';\r\nconst TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private token: TokenStorageService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let authReq = req;\r\n        const token = this.token.getToken();\r\n        if (token != null) {\r\n            authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n            console.log(\"authReq Bearer \" + token);\r\n        }\r\n        return next.handle(authReq);\r\n    }\r\n\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nconst AUTH_API = '/api/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signin', {\n      username,\n      password\n    }, httpOptions);\n  }\n\n  register(username: string, email: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signup', {\n      username,\n      email,\n      password\n    }, httpOptions);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return window.sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user: any): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n    return {};\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'user', component: BoardUserComponent },\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from './_services/token-storage.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  private roles: string[] = [];\r\n  isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username?: string;\r\n\r\n  constructor(private tokenStorageService: TokenStorageService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n    console.log(\"logged in:\" + this.isLoggedIn);\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\r\n      this.username = user.username;\r\n      setTimeout(() => {\r\n        this.router.navigate(['/user']);\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    this.tokenStorageService.signOut();\r\n    window.location.reload();\r\n  }\r\n\r\n}\r\n","<div id=\"app\">\r\n\t<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n\t\t<a href=\"#\" style=\"pointer-events: none; cursor: default\" class=\"navbar-brand\">Fibonacci Spiral Matrix</a>\r\n\t\t<ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n\t\t\t<li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\r\n\t\t\t\t<a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"nav-item\" *ngIf=\"showAdminBoard\">\r\n\t\t\t\t<a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t<a href=\"/user\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"user\">User</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\t<ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\r\n\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t<a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t<a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\t<ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\r\n\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t<a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</nav>\r\n\t<div class=\"container\">\r\n\t\t<router-outlet></router-outlet>\r\n\t</div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RowsComponent } from './rows/rows.component';\r\nimport { environment } from '../environments/environment';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\r\n\r\n// state related imports\r\n// import { StoreModule } from '@ngrx/store';\r\n// import { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n// import { reducers, metaReducers } from './app-state/reducers';\r\n// import { CustomRouterStateSerializer } from './app-state/shared/utils';\r\n// import { StoreRouterConnectingModule, RouterStateSerializer } from '@ngrx/router-store';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RowsComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    BoardUserComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    /**\r\n     * StoreModule.forRoot is imported once in the root module, accepting a reducer\r\n     * function or object map of reducer functions. If passed an object of\r\n     * reducers, combineReducers will be run creating your application\r\n     * meta-reducer. This returns all providers for an @ngrx/store\r\n     * based application.\r\n\r\n    StoreModule.forRoot(reducers, { metaReducers }),\r\n\r\n    /**\r\n     * @ngrx/router-store keeps router state up-to-date in the store.\r\n\r\n    StoreRouterConnectingModule,\r\n\r\n    /**\r\n     * Store devtools instrument the store retaining past versions of state\r\n     * and recalculating new states. This enables powerful time-travel\r\n     * debugging.\r\n     *\r\n     * To use the debugger, install the Redux Devtools extension for either\r\n     * Chrome or Firefox\r\n     *\r\n     * See: https://github.com/zalmoxisus/redux-devtools-extension\r\n\r\n     !environment.production ? StoreDevtoolsModule.instrument() : [],\r\n\r\n    /**\r\n     * EffectsModule.forRoot() is imported once in the root module and\r\n     * sets up the effects class to be initialized immediately when the\r\n     * application starts.\r\n     *\r\n     * See: https://github.com/ngrx/platform/blob/master/docs/effects/api.md#forroot\r\n     */\r\n  ],\r\n  providers: [authInterceptorProviders, {provide: LocationStrategy, useClass: HashLocationStrategy}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  rootURL = '/spiral';\r\n\r\n  calculateMatrix(rows: string, columns: string) {\r\n      const params = new HttpParams().append('rows', rows).append('cols', columns);\r\n      return this.http.get(this.rootURL, {params});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {AppService} from \"../app.service\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Subject} from \"rxjs\";\nimport {takeUntil} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-board-user',\n  templateUrl: './board-user.component.html',\n  styleUrls: ['./board-user.component.css']\n})\nexport class BoardUserComponent implements OnInit {\n  content?: string;\n\n  constructor(private appService: AppService) { }\n\n  ngOnInit(): void {\n  }\n\n    title = 'Fibonacci Spiral';\n\n    matrixForm = new FormGroup({\n        numRows: new FormControl('', Validators.nullValidator && Validators.required),\n        numColumns: new FormControl('', Validators.nullValidator && Validators.required),\n    });\n\n    arrayNumbers: any[] = [];\n    arrayCount = 0;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n    onSubmit() {\n        this.appService.calculateMatrix(this.matrixForm.value.numRows, this.matrixForm.value.numColumns).pipe(takeUntil(this.destroy$)).subscribe((numbers: any[]) => {\n            let arrayFromObject : any;\n            arrayFromObject = Object.keys(numbers).map(key => numbers[key])\n            arrayFromObject.forEach(function(data){\n                numbers = data\n            });\n            this.arrayCount = numbers.length;\n            this.arrayNumbers = numbers;\n        });\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.unsubscribe();\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12 mrgnbtm\">\n            <h1 style=\"font-weight: bold\">Fibonacci Spiral</h1>\n            <h6 style=\"margin-top: 20px\">Matrix Properties</h6>\n            <form [formGroup]=\"matrixForm\" (ngSubmit)=\"onSubmit()\">\n                <table class=\"form-Table\">\n                    <tbody>\n                    <tr mdbTableCol>\n                        <td class=\"labelTd\" id=\"initalTd\" >\n                            <label style=\"padding-top: 8px;\">Numbers of Rows</label>\n                        </td>\n                        <td style=\"padding: 0px\">\n                            <input type=\"number\" class=\"form-control\" formControlName=\"numRows\" id=\"rowsInput\" placeholder=\"Number of Rows\">\n                        </td>\n                        <td class=\"labelTd\">\n                            <label style=\"padding-top: 8px;\">Numbers of Columns</label>\n                        </td>\n                        <td style=\"padding: 0px\">\n                            <input type=\"number\" class=\"form-control\" formControlName=\"numColumns\" id=\"columnsInput\" placeholder=\"Number of Columns\">\n                        </td>\n                        <td style=\"padding-left: 0px; border-radius: unset;\">\n                            <button type=\"submit\" id=\"buttonCalculate\" [disabled]=\"!matrixForm.valid\" class=\"btn btn-secondary\">Calculate</button>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <br>\n                <app-rows *ngIf=\"arrayNumbers.length !== 0\" [rows]=\"arrayNumbers\"></app-rows>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport Typed from 'typed.js';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n  content?: string;\n  typed: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.setTypedText();\n  }\n\n    setTypedText() {\n\n        let stringsText = [];\n\n        stringsText = ['Welcome to Fibonacci Spiral Matrix', 'Discover the magic of the mathematics',\n            'and coding'];\n\n        const options = {\n            strings: stringsText,\n            typeSpeed: 80,\n            backSpeed: 10,\n            showCursor: true,\n            cursorChar: '',\n            loop: true\n        };\n\n        this.typed = new Typed('.typing-element', options);\n        this.typed.reset(true);\n    }\n\n}","<div class=\"heading\">\n    <h1>Fibonacci Spiral Matrix</h1>\n    <h3>\n        <div class=\"typing-container\">\n            <span class=\"typing-element\"></span>\n        </div>\n    </h3>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  submitted = false;\n  form: FormGroup;\n\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private authService: AuthService,\n      private tokenStorage: TokenStorageService,\n      private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n      this.form = this.formBuilder.group(\n          {\n              username: [\n                  '',\n                  [\n                      Validators.required,\n                      Validators.minLength(6),\n                      Validators.maxLength(20)\n                  ]\n              ],\n              password: [\n                  '',\n                  [\n                      Validators.required,\n                      Validators.minLength(6),\n                      Validators.maxLength(40)\n                  ]\n              ]\n          }\n      );\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n      return this.form.controls;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n    this.authService.login(this.form.value.username, this.form.value.password).subscribe(\n        data => {\n            this.tokenStorage.saveToken(data.accessToken);\n            this.tokenStorage.saveUser(data);\n            this.isLoginFailed = false;\n            this.isLoggedIn = true;\n            this.roles = this.tokenStorage.getUser().roles;\n            this.reloadPage();\n        },\n        err => {\n          this.errorMessage = err.error.message;\n          this.isLoginFailed = true;\n        }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n}\n","<div class=\"col-md-12\" style=\"padding-top: 25px; display: flex; justify-content: center;\">\n    <div class=\"card card-container\" style=\"align-items: center; width: 30%\">\n        <img\n                id=\"profile-img\"\n                src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                class=\"profile-img-card\"\n                style=\"padding-top: 10px; border-radius: 50%; width: 55%\"\n        />\n\n        <form *ngIf=\"!isLoggedIn\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label>Username</label>\n                <input\n                        type=\"text\"\n                        formControlName=\"username\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"/>\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    <div *ngIf=\"f.username.errors.minlength\">\n                        Username must be at least 6 characters\n                    </div>\n                    <div *ngIf=\"f.username.errors.maxlength\">\n                        Username must not exceed 20 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label>Password</label>\n                <input\n                        type=\"password\"\n                        formControlName=\"password\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">\n                        Password must be at least 6 characters\n                    </div>\n                    <div *ngIf=\"f.password.errors.maxlength\">\n                        Username must not exceed 40 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary btn-block\">\n                    Login\n                </button>\n            </div>\n            <div class=\"form-group\">\n                <div\n                        class=\"alert alert-danger\"\n                        role=\"alert\"\n                        *ngIf=\"f.submitted && isLoginFailed\"\n                >\n                    Login failed: {{ errorMessage }}\n                </div>\n            </div>\n        </form>\n        <div class=\"alert alert-success\" style=\"margin-top: 20px;\" *ngIf=\"isLoggedIn\">\n            Logged in as {{ roles }}.\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport Validation from '../utils/validation';\nimport { AuthService } from '../_services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n  submitted = false;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private authService: AuthService,\n      private router: Router) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group(\n        {\n          username: [\n            '',\n            [\n              Validators.required,\n              Validators.minLength(6),\n              Validators.maxLength(20)\n            ]\n          ],\n          email: ['', [Validators.required, Validators.email]],\n          password: [\n            '',\n            [\n              Validators.required,\n              Validators.minLength(6),\n              Validators.maxLength(40)\n            ]\n          ],\n          confirmPassword: ['', Validators.required]\n        },\n        {\n          validators: [Validation.match('password', 'confirmPassword')]\n        }\n    );\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n      return this.form.controls;\n  }\n\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  onSubmit(): void {\n    this.submitted = true;\n    this.authService.register(this.form.value.username, this.form.value.email, this.form.value.password).subscribe(\n        data => {\n          console.log(data);\n          this.isSuccessful = true;\n          this.isSignUpFailed = false;\n            setTimeout(() => {\n                this.router.navigate(['/login']);\n                }, 4000);\n        },\n        err => {\n            console.log(err.error.message)\n          this.errorMessage = err.error.message;\n          this.isSignUpFailed = true;\n        }\n    );\n  }\n\n  onReset(): void {\n    this.submitted = false;\n    this.form.reset();\n  }\n\n}\n","<div class=\"col-md-12\" style=\"padding-top: 25px; display: flex; justify-content: center;\">\n    <div class=\"card card-container\" style=\"align-items: center; width: 30%\">\n        <img\n                id=\"profile-img\"\n                src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                class=\"profile-img-card\"\n                style=\"padding-top: 10px; border-radius: 50%; width: 55%\"\n        />\n\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label>Username</label>\n                <input\n                        type=\"text\"\n                        formControlName=\"username\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"/>\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    <div *ngIf=\"f.username.errors.minlength\">\n                        Username must be at least 6 characters\n                    </div>\n                    <div *ngIf=\"f.username.errors.maxlength\">\n                        Username must not exceed 20 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label>Email</label>\n                <input\n                        type=\"text\"\n                        formControlName=\"email\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Email is invalid</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label>Password</label>\n                <input\n                        type=\"password\"\n                        formControlName=\"password\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">\n                        Password must be at least 6 characters\n                    </div>\n                    <div *ngIf=\"f.password.errors.maxlength\">\n                        Username must not exceed 40 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label>Confirm Password</label>\n                <input\n                        type=\"password\"\n                        formControlName=\"confirmPassword\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\"/>\n                <div\n                        *ngIf=\"submitted && f.confirmPassword.errors\"\n                        class=\"invalid-feedback\"\n                >\n                    <div *ngIf=\"f.confirmPassword.errors.required\">\n                        Confirm Password is required\n                    </div>\n                    <div *ngIf=\"f.confirmPassword.errors.matching\">\n                        Confirm Password does not match\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n                <button\n                        type=\"button\"\n                        (click)=\"onReset()\"\n                        class=\"btn btn-warning float-right\"\n                >\n                    Reset\n                </button>\n            </div>\n            <div class=\"alert alert-warning\" *ngIf=\"isSignUpFailed\">\n                Signup failed!<br />{{ errorMessage }}\n            </div>\n            <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n                Your registration was successful!\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rows',\r\n  templateUrl: './rows.component.html',\r\n  styleUrls: ['./rows.component.css']\r\n})\r\nexport class RowsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input() rows: any[];\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<table class=\"table table-bordered\" style=\"border: 2px solid #6c757d5e\">\r\n  <tbody>\r\n  <tr *ngFor=\"let row of rows; let i = index\">\r\n    <td *ngFor=\"let item of row\" style=\"border:2px solid #6c757d5e;\">\r\n      {{ item }}\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport default class Validation {\r\n\r\n    static match(controlName: string, checkControlName: string): ValidatorFn {\r\n        return (controls: AbstractControl) => {\r\n            const control = controls.get(controlName);\r\n            const checkControl = controls.get(checkControlName);\r\n            if (checkControl.errors && !checkControl.errors.matching) {\r\n                return null;\r\n            }\r\n            if (control.value !== checkControl.value) {\r\n                controls.get(checkControlName).setErrors({ matching: true });\r\n                return { matching: true };\r\n            } else {\r\n                return null;\r\n            }\r\n        };\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}